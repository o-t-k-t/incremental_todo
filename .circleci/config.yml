# Ruby CircleCI 2.0 configuration file
version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: incremental_todo
          RAILS_ENV: test
      - image: circleci/postgres:9.4.16-alpine-postgis
        environment:
          POSTGRES_USER: incremental_todo
          POSTGRES_DB: incremental_todo_test
          POSTGRES_PASSWORD: ""
      - image: redis
    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: haml-lint
          command: bundle exec haml-lint

      - run:
          name: Brakeman
          command: bundle exec brakeman -A -w 1

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            ./cc-test-reporter before-build

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --seed 2039712386 \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
